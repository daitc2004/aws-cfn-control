{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Launch an instance with signal.",
  "Resources": {
    "MyInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType"     : { "Ref" : "MyInstanceType" },
        "SubnetId"         : { "Ref" : "MySubnet" },
        "ImageId"          : { "Fn::FindInMap" :  [ "AWSRegionAMI", { "Ref" : "AWS::Region" } , "HVM64" ] },
        "KeyName"          :         { "Ref": "MyKeyName"  },
        "SecurityGroupIds" : [ { "Ref": "MySecurityGroups" } ],
        "UserData"         : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "echo hello > /tmp/file.txt\n",
          "\n",
          "# Send success signal after 60 seconds\n",
          "sleep 60\n",
          "\n",
          "function status_ec2_signal {\n",
          "  if [[ -e /tmp/file.txt ]]; then\n",
          "    echo \"test file exists\"\n",
          "    curl -X PUT -H 'Content-Type:' --data-binary",
          "      '{ \"Status\" : \"SUCCESS\",",
          "      \"Reason\" : \"Instance Launched, waited 60 seconds and created a test file\",",
          "      \"UniqueId\" : \"test001\",",
          "      \"Data\" : \"Instance has launched, waited 60 seconds and created a test file\"}' ",
          "      \"",  { "Ref" : "MyWaitHandle" } , "\"" , "\n",
          "  fi\n",
          "}\n",
          "status_ec2_signal\n", "\n"
          ]]}}
      }
    },
    "MyWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },
    "MyWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "MyInstance",
      "Properties" : {
        "Handle" : { "Ref" : "MyWaitHandle" },
        "Timeout" : "300"
      }
    }
  },
  "Parameters": {
    "MyInstanceType": {
      "Description": "My instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro"
      ],
      "ConstraintDescription": "None"
    },
    "MyKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "MySubnet": {
      "Description": "Subnet IDs",
      "Type":  "AWS::EC2::Subnet::Id"
    },
    "MySecurityGroups": {
      "Description": "Security Groups IDs",
      "Type":  "AWS::EC2::SecurityGroup::Id"
    }
  },
  "Mappings" : {
    "AWSRegionAMI": {
      "us-east-1": {
        "HVM64": "ami-0b33d91d"
      }
    }
  },
  "Outputs" : {
    "InstanceID" : {
      "Description": "The Instance ID",
      "Value" : { "Ref" : "MyInstance" }
    },
    "InstancePublicIP" : {
      "Value" :  { "Fn::GetAtt" : [ "MyInstance" , "PublicIp" ]}
    }
  }
}

